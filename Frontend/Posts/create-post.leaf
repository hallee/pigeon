#embed("header")
#embed("nav")
<h1>#(category.name)</h1>
<h2>Create</h2>
<section class="content">
	<div id="create">
	#embed("Posts/post-fields")
	</div>
</section>
#embed("footer")

<script src="https://cdn.jsdelivr.net/npm/vue"></script>
<script>
	var create = new Vue({
		el: '#create',
		data: {
			name: #js(category.name),
			plural: #js(category.plural),
			fields: [
				#for(field in category.template) {
					{
						name: #js(field.name),
						type: #js(field.type),
						value: #js(field.value),
						required: #js(field.required)
					\},
				}
			],
			authors: null,
			errors: [],
			easyMDE: {}
		},
		mounted: function() {
			this.fields.forEach( (field, index) => {
				const textareaID = `textarea${index}`
				if (field.type === 'Markdown' && this.easyMDE[textareaID] == null) {
					this.easyMDE[textareaID] = new EasyMDE({
						element: document.getElementById(textareaID),
						toolbar: ['bold', 'italic', 'strikethrough', 'heading', '|', 'code', 'quote', 'unordered-list', 'ordered-list', '|', 'link', 'image', 'horizontal-rule', '|', 'preview', '|', 'redo', 'undo', '|', {
							name: 'help',
							action: 'https://daringfireball.net/projects/markdown/basics',
							className: 'fa fab fa-question-circle',
							title: 'Help',
						}],
						renderingConfig: {
							codeSyntaxHighlighting: true
						},
						initialValue: field.value
					});
				}
			})
		},
		methods: {
			createItem: function() {
				#embed("Helpers/fields-markdown-conversion")

				return {
					categoryID: #js(category.id),
					authors: [],
					created: new Date().toISOString(),
					content: this.fields
				}
			},
			handleSubmit: function(event) {
				console.log("SUBMIT")
				const self = this
				self.errors = []
				let item = self.createItem()

				var xhr = new XMLHttpRequest()
				xhr.open('POST', '/content/#(category.plural)', true)
				xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8')
				xhr.send(JSON.stringify(item))

				xhr.onloadend = function () {
					const location = xhr.getResponseHeader('Location')
					if (location) {
						window.location.href = location
					}

					const response = JSON.parse(xhr.responseText)
					if (response.error) {
						self.handleError(response.reason)
					}
				}
			},
			handleError: function(error) {
				this.errors.push(error)
			},
			handleCancel: function() {
				console.log("CANCEL")
			}
		}
	})
</script>
